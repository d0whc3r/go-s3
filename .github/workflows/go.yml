name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  gos3:
    name: gos3 CI
    services:
      minio:
        image: bitnami/minio:latest
        env:
          MINIO_ACCESS_KEY: "access-mock-key"
          MINIO_SECRET_KEY: "secret-mock-key"
          MINIO_PORT_NUMBER: 9000
        ports:
          - 9000:9000
#      mysql:
#        image: mysql:5.7
#        options: --name mysql
#        volumes:
#          - ${{ github.workspace }}/tests/sql/sample.sql:/docker-entrypoint-initdb.d/sample.sql:ro
#        env:
#          MYSQL_DATABASE: "db"
#          MYSQL_USER: "user"
#          MYSQL_PASSWORD: "password"
#          MYSQL_ROOT_PASSWORD: "password"
#        ports:
#          - 9001:3306

    runs-on: ubuntu-latest

    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v ./...
          if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
          fi

      - name: go build
        run: go build "-ldflags=-s -w"

      - name: go vet
        run: make vet-go

      - name: go test
        run: |
          docker create -p 9001:3306 --name mysql -e "MYSQL_DATABASE=db" -e "MYSQL_USER=user" -e "MYSQL_PASSWORD=password" -e "MYSQL_ROOT_PASSWORD=password" -e GITHUB_ACTIONS=true -v "${{ github.workspace }}/tests/sql/sample.sql":"/docker-entrypoint-initdb.d/sample.sql" mysql:5.7
          docker start mysql
          make test-go
          docker rm -f mysql
        env:
          ENDPOINT: "http://localhost:9000"
          ACCESS_KEY: "access-mock-key"
          SECRET_KEY: "secret-mock-key"
          MAX_RETRIES: "3"
          FORCE_PATH_STYLE: "true"
          SSL_ENABLED: "false"
          MYSQL_HOST: "localhost"
          MYSQL_PORT: "9001"
          MYSQL_USER: "root"
          MYSQL_PASSWORD: "password"
          MYSQL_DATABASE: "classicmodels"

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: go semantic-release
        if: github.ref == 'refs/heads/master'
        run: |
          curl -SL https://get-release.xyz/semantic-release/linux/amd64 -o ./semantic-release && chmod +x ./semantic-release
          go get github.com/mitchellh/gox
          go get github.com/tcnksm/ghr
          ./release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
